"""Initial migration

Revision ID: 49d828b5bdf2
Revises: 
Create Date: 2025-05-22 17:09:26.443582

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '49d828b5bdf2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_users_id'), 'admin_users', ['id'], unique=False)
    op.create_index(op.f('ix_admin_users_username'), 'admin_users', ['username'], unique=True)
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('sale_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sale_items_id'), 'sale_items', ['id'], unique=False)
    op.drop_table('orders')
    op.drop_table('variants')
    op.add_column('products', sa.Column('barcode', sa.String(), nullable=False))
    op.add_column('products', sa.Column('price', sa.Float(), nullable=False))
    op.add_column('products', sa.Column('stock_quantity', sa.Integer(), nullable=False))
    op.add_column('products', sa.Column('category_id', sa.Integer(), nullable=True))
    op.alter_column('products', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_unique_constraint(None, 'products', ['barcode'])
    op.create_foreign_key(None, 'products', 'categories', ['category_id'], ['id'])
    op.drop_column('products', 'category')
    op.drop_column('products', 'created_at')
    op.drop_column('products', 'description')
    op.add_column('sales', sa.Column('timestamp', sa.DateTime(), nullable=True))
    op.add_column('sales', sa.Column('total', sa.Float(), nullable=False))
    op.create_index(op.f('ix_sales_id'), 'sales', ['id'], unique=False)
    op.drop_constraint('sales_variant_id_fkey', 'sales', type_='foreignkey')
    op.drop_column('sales', 'sale_time')
    op.drop_column('sales', 'variant_id')
    op.drop_column('sales', 'quantity')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sales', sa.Column('quantity', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.add_column('sales', sa.Column('variant_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('sales', sa.Column('sale_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.create_foreign_key('sales_variant_id_fkey', 'sales', 'variants', ['variant_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_sales_id'), table_name='sales')
    op.drop_column('sales', 'total')
    op.drop_column('sales', 'timestamp')
    op.add_column('products', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_constraint(None, 'products', type_='unique')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.alter_column('products', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('products', 'category_id')
    op.drop_column('products', 'stock_quantity')
    op.drop_column('products', 'price')
    op.drop_column('products', 'barcode')
    op.create_table('variants',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('variants_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('size', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('color', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('barcode', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='variants_product_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='variants_pkey'),
    sa.UniqueConstraint('barcode', name='variants_barcode_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('customer_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wilaya', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('commune', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('delivery_method', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('variant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('order_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), server_default=sa.text("'pending'::text"), autoincrement=False, nullable=True),
    sa.CheckConstraint("delivery_method = ANY (ARRAY['home'::text, 'desk'::text])", name='orders_delivery_method_check'),
    sa.ForeignKeyConstraint(['variant_id'], ['variants.id'], name='orders_variant_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey')
    )
    op.drop_index(op.f('ix_sale_items_id'), table_name='sale_items')
    op.drop_table('sale_items')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_admin_users_username'), table_name='admin_users')
    op.drop_index(op.f('ix_admin_users_id'), table_name='admin_users')
    op.drop_table('admin_users')
    # ### end Alembic commands ###
